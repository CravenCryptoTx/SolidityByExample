{
	"id": "713c64320819e2303c15d20aaae55496",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"FunctionModifiers.sol": {
				"content": "pragma solidity ^0.5.3;\r\n\r\ncontract FuncModifier {\r\n    // Examples\r\n    // 1. Restricting write access (basic syntax)\r\n    // 2. Validate inputs (inputs, why useful?)\r\n    // 3. Reentrancy guard (reentrancy hack)\r\n\r\n    address public owner;\r\n    \r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    // function onlyOwner() public view {\r\n    //     require(msg.sender == owner, \"Not Owner!\");\r\n    // }\r\n\r\n    // function validAddress(address _a) public pure {\r\n    //     require(_a != address(0), \"Not valid address!\");\r\n    // }\r\n\r\n    // function changeOwner(address _newOwner) public {\r\n    //     onlyOwner();\r\n    //     validAddress(_newOwner);\r\n    //     owner = _newOwner;\r\n    // }\r\n\r\n    \r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Not Owner!\");\r\n        _;\r\n    }\r\n\r\n    modifier validAddress(address _a) {\r\n        require(_a != address(0), \"Not valid address!\");\r\n        _;\r\n    }\r\n\r\n    function changeOwner(address _newOwner) public onlyOwner validAddress(_newOwner) {\r\n        owner = _newOwner;\r\n    }\r\n\r\n\r\n    uint public x = 10;\r\n    bool locked;\r\n\r\n    modifier noReentrancy() {\r\n        require(!locked, \"Locked\");\r\n        locked = true;\r\n        _;\r\n        locked = false;\r\n    }\r\n\r\n    function decrement(uint i) public noReentrancy {\r\n        x -= i;\r\n\r\n        if (i > 1) {\r\n            decrement(i - 1);\r\n        }\r\n    }\r\n\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"FunctionModifiers.sol": {
				"FuncModifier": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "changeOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "i",
									"type": "uint256"
								}
							],
							"name": "decrement",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "x",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"FunctionModifiers.sol\":27:1405  contract FuncModifier {\r... */\n  mstore(0x40, 0x80)\n    /* \"FunctionModifiers.sol\":1093:1095  10 */\n  0x0a\n    /* \"FunctionModifiers.sol\":1077:1095  uint public x = 10 */\n  0x01\n  sstore\n    /* \"FunctionModifiers.sol\":254:312  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"FunctionModifiers.sol\":254:312  constructor() public {\r... */\n  pop\n    /* \"FunctionModifiers.sol\":294:304  msg.sender */\n  caller\n    /* \"FunctionModifiers.sol\":286:291  owner */\n  0x00\n  dup1\n    /* \"FunctionModifiers.sol\":286:304  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"FunctionModifiers.sol\":27:1405  contract FuncModifier {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"FunctionModifiers.sol\":27:1405  contract FuncModifier {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"FunctionModifiers.sol\":27:1405  contract FuncModifier {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0c55699c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3a9ebefd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa6f9dae1\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"FunctionModifiers.sol\":1077:1095  uint public x = 10 */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FunctionModifiers.sol\":1260:1398  function decrement(uint i) public noReentrancy {\r... */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_10:\n        /* \"FunctionModifiers.sol\":1260:1398  function decrement(uint i) public noReentrancy {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_11\n      jump\t// in\n    tag_9:\n      stop\n        /* \"FunctionModifiers.sol\":221:241  address public owner */\n    tag_5:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FunctionModifiers.sol\":950:1067  function changeOwner(address _newOwner) public onlyOwner validAddress(_newOwner) {\r... */\n    tag_6:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_15:\n        /* \"FunctionModifiers.sol\":950:1067  function changeOwner(address _newOwner) public onlyOwner validAddress(_newOwner) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_16\n      jump\t// in\n    tag_14:\n      stop\n        /* \"FunctionModifiers.sol\":1077:1095  uint public x = 10 */\n    tag_8:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"FunctionModifiers.sol\":1260:1398  function decrement(uint i) public noReentrancy {\r... */\n    tag_11:\n        /* \"FunctionModifiers.sol\":1166:1172  locked */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"FunctionModifiers.sol\":1165:1172  !locked */\n      iszero\n        /* \"FunctionModifiers.sol\":1157:1183  require(!locked, \"Locked\") */\n      tag_18\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4c6f636b65640000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_18:\n        /* \"FunctionModifiers.sol\":1203:1207  true */\n      0x01\n        /* \"FunctionModifiers.sol\":1194:1200  locked */\n      0x02\n      0x00\n        /* \"FunctionModifiers.sol\":1194:1207  locked = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"FunctionModifiers.sol\":1323:1324  i */\n      dup1\n        /* \"FunctionModifiers.sol\":1318:1319  x */\n      0x01\n      0x00\n        /* \"FunctionModifiers.sol\":1318:1324  x -= i */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"FunctionModifiers.sol\":1345:1346  1 */\n      0x01\n        /* \"FunctionModifiers.sol\":1341:1342  i */\n      dup2\n        /* \"FunctionModifiers.sol\":1341:1346  i > 1 */\n      gt\n        /* \"FunctionModifiers.sol\":1337:1391  if (i > 1) {\r... */\n      iszero\n      tag_20\n      jumpi\n        /* \"FunctionModifiers.sol\":1363:1379  decrement(i - 1) */\n      tag_21\n        /* \"FunctionModifiers.sol\":1377:1378  1 */\n      0x01\n        /* \"FunctionModifiers.sol\":1373:1374  i */\n      dup3\n        /* \"FunctionModifiers.sol\":1373:1378  i - 1 */\n      sub\n        /* \"FunctionModifiers.sol\":1363:1372  decrement */\n      tag_11\n        /* \"FunctionModifiers.sol\":1363:1379  decrement(i - 1) */\n      jump\t// in\n    tag_21:\n        /* \"FunctionModifiers.sol\":1337:1391  if (i > 1) {\r... */\n    tag_20:\n        /* \"FunctionModifiers.sol\":1239:1244  false */\n      0x00\n        /* \"FunctionModifiers.sol\":1230:1236  locked */\n      0x02\n      0x00\n        /* \"FunctionModifiers.sol\":1230:1244  locked = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"FunctionModifiers.sol\":1260:1398  function decrement(uint i) public noReentrancy {\r... */\n      pop\n      jump\t// out\n        /* \"FunctionModifiers.sol\":221:241  address public owner */\n    tag_13:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"FunctionModifiers.sol\":950:1067  function changeOwner(address _newOwner) public onlyOwner validAddress(_newOwner) {\r... */\n    tag_16:\n        /* \"FunctionModifiers.sol\":782:787  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"FunctionModifiers.sol\":768:787  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"FunctionModifiers.sol\":768:778  msg.sender */\n      caller\n        /* \"FunctionModifiers.sol\":768:787  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"FunctionModifiers.sol\":760:802  require(msg.sender == owner, \"Not Owner!\") */\n      tag_23\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4e6f74204f776e65722100000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_23:\n        /* \"FunctionModifiers.sol\":1020:1029  _newOwner */\n      dup1\n        /* \"FunctionModifiers.sol\":897:898  0 */\n      0x00\n        /* \"FunctionModifiers.sol\":883:899  _a != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"FunctionModifiers.sol\":883:885  _a */\n      dup2\n        /* \"FunctionModifiers.sol\":883:899  _a != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"FunctionModifiers.sol\":875:922  require(_a != address(0), \"Not valid address!\") */\n      tag_25\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4e6f742076616c69642061646472657373210000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_25:\n        /* \"FunctionModifiers.sol\":1050:1059  _newOwner */\n      dup2\n        /* \"FunctionModifiers.sol\":1042:1047  owner */\n      0x00\n      dup1\n        /* \"FunctionModifiers.sol\":1042:1059  owner = _newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"FunctionModifiers.sol\":813:814  _ */\n      pop\n        /* \"FunctionModifiers.sol\":950:1067  function changeOwner(address _newOwner) public onlyOwner validAddress(_newOwner) {\r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820c33078d20c90d8c9813489c8490db02e85110136246c9ad5410e8e93e7a7b7c964736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052600a60015534801561001557600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610417806100656000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630c55699c146100515780633a9ebefd1461006f5780638da5cb5b1461009d578063a6f9dae1146100e7575b600080fd5b61005961012b565b6040518082815260200191505060405180910390f35b61009b6004803603602081101561008557600080fd5b8101908080359060200190929190505050610131565b005b6100a5610213565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610129600480360360208110156100fd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610238565b005b60015481565b600260009054906101000a900460ff16156101b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260068152602001807f4c6f636b6564000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6001600260006101000a81548160ff0219169083151502179055508060016000828254039250508190555060018111156101f5576101f460018203610131565b5b6000600260006101000a81548160ff02191690831515021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f4e6f74204f776e6572210000000000000000000000000000000000000000000081525060200191505060405180910390fd5b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561039e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4e6f742076616c6964206164647265737321000000000000000000000000000081525060200191505060405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505056fea265627a7a72315820c33078d20c90d8c9813489c8490db02e85110136246c9ad5410e8e93e7a7b7c964736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x417 DUP1 PUSH2 0x65 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC55699C EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x3A9EBEFD EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0xA6F9DAE1 EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x12B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x131 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA5 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x238 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4C6F636B65640000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1F5 JUMPI PUSH2 0x1F4 PUSH1 0x1 DUP3 SUB PUSH2 0x131 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F74204F776E65722100000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x39E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F742076616C69642061646472657373210000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xC3 ADDRESS PUSH25 0xD20C90D8C9813489C8490DB02E85110136246C9AD5410E8E93 0xE7 0xA7 0xB7 0xC9 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "27:1378:0:-;;;1093:2;1077:18;;254:58;8:9:-1;5:2;;;30:1;27;20:12;5:2;254:58:0;294:10;286:5;;:18;;;;;;;;;;;;;;;;;;27:1378;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80630c55699c146100515780633a9ebefd1461006f5780638da5cb5b1461009d578063a6f9dae1146100e7575b600080fd5b61005961012b565b6040518082815260200191505060405180910390f35b61009b6004803603602081101561008557600080fd5b8101908080359060200190929190505050610131565b005b6100a5610213565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610129600480360360208110156100fd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610238565b005b60015481565b600260009054906101000a900460ff16156101b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260068152602001807f4c6f636b6564000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6001600260006101000a81548160ff0219169083151502179055508060016000828254039250508190555060018111156101f5576101f460018203610131565b5b6000600260006101000a81548160ff02191690831515021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f4e6f74204f776e6572210000000000000000000000000000000000000000000081525060200191505060405180910390fd5b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561039e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4e6f742076616c6964206164647265737321000000000000000000000000000081525060200191505060405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505056fea265627a7a72315820c33078d20c90d8c9813489c8490db02e85110136246c9ad5410e8e93e7a7b7c964736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC55699C EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x3A9EBEFD EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0xA6F9DAE1 EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x12B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x131 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA5 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x238 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4C6F636B65640000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1F5 JUMPI PUSH2 0x1F4 PUSH1 0x1 DUP3 SUB PUSH2 0x131 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F74204F776E65722100000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x39E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F742076616C69642061646472657373210000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xC3 ADDRESS PUSH25 0xD20C90D8C9813489C8490DB02E85110136246C9AD5410E8E93 0xE7 0xA7 0xB7 0xC9 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "27:1378:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;27:1378:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1077:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1260:138;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1260:138:0;;;;;;;;;;;;;;;;;:::i;:::-;;221:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;950:117;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;950:117:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;1077:18;;;;:::o;1260:138::-;1166:6;;;;;;;;;;;1165:7;1157:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1203:4;1194:6;;:13;;;;;;;;;;;;;;;;;;1323:1;1318;;:6;;;;;;;;;;;1345:1;1341;:5;1337:54;;;1363:16;1377:1;1373;:5;1363:9;:16::i;:::-;1337:54;1239:5;1230:6;;:14;;;;;;;;;;;;;;;;;;1260:138;:::o;221:20::-;;;;;;;;;;;;;:::o;950:117::-;782:5;;;;;;;;;;;768:19;;:10;:19;;;760:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1020:9;897:1;883:16;;:2;:16;;;;875:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:9;1042:5;;:17;;;;;;;;;;;;;;;;;;813:1;950:117;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "209400",
								"executionCost": "41123",
								"totalCost": "250523"
							},
							"external": {
								"changeOwner(address)": "22058",
								"decrement(uint256)": "infinite",
								"owner()": "1075",
								"x()": "983"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 1405,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 27,
									"end": 1405,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 27,
									"end": 1405,
									"name": "MSTORE"
								},
								{
									"begin": 1093,
									"end": 1095,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 1077,
									"end": 1095,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1077,
									"end": 1095,
									"name": "SSTORE"
								},
								{
									"begin": 254,
									"end": 312,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 254,
									"end": 312,
									"name": "POP"
								},
								{
									"begin": 294,
									"end": 304,
									"name": "CALLER"
								},
								{
									"begin": 286,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 286,
									"end": 291,
									"name": "DUP1"
								},
								{
									"begin": 286,
									"end": 304,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 286,
									"end": 304,
									"name": "EXP"
								},
								{
									"begin": 286,
									"end": 304,
									"name": "DUP2"
								},
								{
									"begin": 286,
									"end": 304,
									"name": "SLOAD"
								},
								{
									"begin": 286,
									"end": 304,
									"name": "DUP2"
								},
								{
									"begin": 286,
									"end": 304,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 286,
									"end": 304,
									"name": "MUL"
								},
								{
									"begin": 286,
									"end": 304,
									"name": "NOT"
								},
								{
									"begin": 286,
									"end": 304,
									"name": "AND"
								},
								{
									"begin": 286,
									"end": 304,
									"name": "SWAP1"
								},
								{
									"begin": 286,
									"end": 304,
									"name": "DUP4"
								},
								{
									"begin": 286,
									"end": 304,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 286,
									"end": 304,
									"name": "AND"
								},
								{
									"begin": 286,
									"end": 304,
									"name": "MUL"
								},
								{
									"begin": 286,
									"end": 304,
									"name": "OR"
								},
								{
									"begin": 286,
									"end": 304,
									"name": "SWAP1"
								},
								{
									"begin": 286,
									"end": 304,
									"name": "SSTORE"
								},
								{
									"begin": 286,
									"end": 304,
									"name": "POP"
								},
								{
									"begin": 27,
									"end": 1405,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 1405,
									"name": "DUP1"
								},
								{
									"begin": 27,
									"end": 1405,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 1405,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 1405,
									"name": "CODECOPY"
								},
								{
									"begin": 27,
									"end": 1405,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 1405,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820c33078d20c90d8c9813489c8490db02e85110136246c9ad5410e8e93e7a7b7c964736f6c63430005110032",
									".code": [
										{
											"begin": 27,
											"end": 1405,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "MSTORE"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "POP"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "LT"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "SHR"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "PUSH",
											"value": "C55699C"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "PUSH",
											"value": "3A9EBEFD"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "PUSH",
											"value": "A6F9DAE1"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "JUMPDEST"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1405,
											"name": "REVERT"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "JUMPDEST"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "JUMPDEST"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "MLOAD"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "DUP1"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "DUP3"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "DUP2"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "MSTORE"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "ADD"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "SWAP2"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "POP"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "POP"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "MLOAD"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "DUP1"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "SWAP2"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "SUB"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "SWAP1"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "RETURN"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "JUMPDEST"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "DUP1"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "DUP2"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "ADD"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "SWAP1"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "DUP1"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "DUP1"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "SWAP1"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "ADD"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "SWAP1"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "SWAP3"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "SWAP2"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "SWAP1"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "POP"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "POP"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "POP"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "JUMPDEST"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "STOP"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "JUMPDEST"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "JUMPDEST"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "MLOAD"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "DUP1"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "DUP3"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "AND"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "AND"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "DUP2"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "MSTORE"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "ADD"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "SWAP2"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "POP"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "POP"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "MLOAD"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "DUP1"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "SWAP2"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "SUB"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "SWAP1"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "RETURN"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "JUMPDEST"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "DUP1"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "DUP2"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "ADD"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "SWAP1"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "DUP1"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "DUP1"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "AND"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "SWAP1"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "ADD"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "SWAP1"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "SWAP3"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "SWAP2"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "SWAP1"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "POP"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "POP"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "POP"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "JUMPDEST"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "STOP"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "JUMPDEST"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "SLOAD"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "DUP2"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "JUMPDEST"
										},
										{
											"begin": 1166,
											"end": 1172,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1166,
											"end": 1172,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1166,
											"end": 1172,
											"name": "SWAP1"
										},
										{
											"begin": 1166,
											"end": 1172,
											"name": "SLOAD"
										},
										{
											"begin": 1166,
											"end": 1172,
											"name": "SWAP1"
										},
										{
											"begin": 1166,
											"end": 1172,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1166,
											"end": 1172,
											"name": "EXP"
										},
										{
											"begin": 1166,
											"end": 1172,
											"name": "SWAP1"
										},
										{
											"begin": 1166,
											"end": 1172,
											"name": "DIV"
										},
										{
											"begin": 1166,
											"end": 1172,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1166,
											"end": 1172,
											"name": "AND"
										},
										{
											"begin": 1165,
											"end": 1172,
											"name": "ISZERO"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "JUMPI"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "MLOAD"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "DUP2"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "MSTORE"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "ADD"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "DUP1"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "DUP1"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "ADD"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "DUP3"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "DUP2"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "SUB"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "DUP3"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "MSTORE"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "DUP2"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "MSTORE"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "ADD"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "DUP1"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "PUSH",
											"value": "4C6F636B65640000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "DUP2"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "MSTORE"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "POP"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "ADD"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "SWAP2"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "POP"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "POP"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "MLOAD"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "DUP1"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "SWAP2"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "SUB"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "SWAP1"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "REVERT"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1157,
											"end": 1183,
											"name": "JUMPDEST"
										},
										{
											"begin": 1203,
											"end": 1207,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1194,
											"end": 1200,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1194,
											"end": 1200,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1194,
											"end": 1207,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1194,
											"end": 1207,
											"name": "EXP"
										},
										{
											"begin": 1194,
											"end": 1207,
											"name": "DUP2"
										},
										{
											"begin": 1194,
											"end": 1207,
											"name": "SLOAD"
										},
										{
											"begin": 1194,
											"end": 1207,
											"name": "DUP2"
										},
										{
											"begin": 1194,
											"end": 1207,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1194,
											"end": 1207,
											"name": "MUL"
										},
										{
											"begin": 1194,
											"end": 1207,
											"name": "NOT"
										},
										{
											"begin": 1194,
											"end": 1207,
											"name": "AND"
										},
										{
											"begin": 1194,
											"end": 1207,
											"name": "SWAP1"
										},
										{
											"begin": 1194,
											"end": 1207,
											"name": "DUP4"
										},
										{
											"begin": 1194,
											"end": 1207,
											"name": "ISZERO"
										},
										{
											"begin": 1194,
											"end": 1207,
											"name": "ISZERO"
										},
										{
											"begin": 1194,
											"end": 1207,
											"name": "MUL"
										},
										{
											"begin": 1194,
											"end": 1207,
											"name": "OR"
										},
										{
											"begin": 1194,
											"end": 1207,
											"name": "SWAP1"
										},
										{
											"begin": 1194,
											"end": 1207,
											"name": "SSTORE"
										},
										{
											"begin": 1194,
											"end": 1207,
											"name": "POP"
										},
										{
											"begin": 1323,
											"end": 1324,
											"name": "DUP1"
										},
										{
											"begin": 1318,
											"end": 1319,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1318,
											"end": 1319,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1324,
											"name": "DUP3"
										},
										{
											"begin": 1318,
											"end": 1324,
											"name": "DUP3"
										},
										{
											"begin": 1318,
											"end": 1324,
											"name": "SLOAD"
										},
										{
											"begin": 1318,
											"end": 1324,
											"name": "SUB"
										},
										{
											"begin": 1318,
											"end": 1324,
											"name": "SWAP3"
										},
										{
											"begin": 1318,
											"end": 1324,
											"name": "POP"
										},
										{
											"begin": 1318,
											"end": 1324,
											"name": "POP"
										},
										{
											"begin": 1318,
											"end": 1324,
											"name": "DUP2"
										},
										{
											"begin": 1318,
											"end": 1324,
											"name": "SWAP1"
										},
										{
											"begin": 1318,
											"end": 1324,
											"name": "SSTORE"
										},
										{
											"begin": 1318,
											"end": 1324,
											"name": "POP"
										},
										{
											"begin": 1345,
											"end": 1346,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1341,
											"end": 1342,
											"name": "DUP2"
										},
										{
											"begin": 1341,
											"end": 1346,
											"name": "GT"
										},
										{
											"begin": 1337,
											"end": 1391,
											"name": "ISZERO"
										},
										{
											"begin": 1337,
											"end": 1391,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1337,
											"end": 1391,
											"name": "JUMPI"
										},
										{
											"begin": 1363,
											"end": 1379,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1377,
											"end": 1378,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1373,
											"end": 1374,
											"name": "DUP3"
										},
										{
											"begin": 1373,
											"end": 1378,
											"name": "SUB"
										},
										{
											"begin": 1363,
											"end": 1372,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1363,
											"end": 1379,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1363,
											"end": 1379,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1363,
											"end": 1379,
											"name": "JUMPDEST"
										},
										{
											"begin": 1337,
											"end": 1391,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1337,
											"end": 1391,
											"name": "JUMPDEST"
										},
										{
											"begin": 1239,
											"end": 1244,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1230,
											"end": 1236,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1230,
											"end": 1236,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1230,
											"end": 1244,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1230,
											"end": 1244,
											"name": "EXP"
										},
										{
											"begin": 1230,
											"end": 1244,
											"name": "DUP2"
										},
										{
											"begin": 1230,
											"end": 1244,
											"name": "SLOAD"
										},
										{
											"begin": 1230,
											"end": 1244,
											"name": "DUP2"
										},
										{
											"begin": 1230,
											"end": 1244,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1230,
											"end": 1244,
											"name": "MUL"
										},
										{
											"begin": 1230,
											"end": 1244,
											"name": "NOT"
										},
										{
											"begin": 1230,
											"end": 1244,
											"name": "AND"
										},
										{
											"begin": 1230,
											"end": 1244,
											"name": "SWAP1"
										},
										{
											"begin": 1230,
											"end": 1244,
											"name": "DUP4"
										},
										{
											"begin": 1230,
											"end": 1244,
											"name": "ISZERO"
										},
										{
											"begin": 1230,
											"end": 1244,
											"name": "ISZERO"
										},
										{
											"begin": 1230,
											"end": 1244,
											"name": "MUL"
										},
										{
											"begin": 1230,
											"end": 1244,
											"name": "OR"
										},
										{
											"begin": 1230,
											"end": 1244,
											"name": "SWAP1"
										},
										{
											"begin": 1230,
											"end": 1244,
											"name": "SSTORE"
										},
										{
											"begin": 1230,
											"end": 1244,
											"name": "POP"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "POP"
										},
										{
											"begin": 1260,
											"end": 1398,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "JUMPDEST"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "DUP1"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "SWAP1"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "SLOAD"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "SWAP1"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "EXP"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "SWAP1"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "DIV"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "AND"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "DUP2"
										},
										{
											"begin": 221,
											"end": 241,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "JUMPDEST"
										},
										{
											"begin": 782,
											"end": 787,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 782,
											"end": 787,
											"name": "DUP1"
										},
										{
											"begin": 782,
											"end": 787,
											"name": "SWAP1"
										},
										{
											"begin": 782,
											"end": 787,
											"name": "SLOAD"
										},
										{
											"begin": 782,
											"end": 787,
											"name": "SWAP1"
										},
										{
											"begin": 782,
											"end": 787,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 782,
											"end": 787,
											"name": "EXP"
										},
										{
											"begin": 782,
											"end": 787,
											"name": "SWAP1"
										},
										{
											"begin": 782,
											"end": 787,
											"name": "DIV"
										},
										{
											"begin": 782,
											"end": 787,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 782,
											"end": 787,
											"name": "AND"
										},
										{
											"begin": 768,
											"end": 787,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 768,
											"end": 787,
											"name": "AND"
										},
										{
											"begin": 768,
											"end": 778,
											"name": "CALLER"
										},
										{
											"begin": 768,
											"end": 787,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 768,
											"end": 787,
											"name": "AND"
										},
										{
											"begin": 768,
											"end": 787,
											"name": "EQ"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "JUMPI"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "MLOAD"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "DUP2"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "MSTORE"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "ADD"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "DUP1"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "DUP1"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "ADD"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "DUP3"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "DUP2"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "SUB"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "DUP3"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "MSTORE"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "DUP2"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "MSTORE"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "ADD"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "DUP1"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "PUSH",
											"value": "4E6F74204F776E65722100000000000000000000000000000000000000000000"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "DUP2"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "MSTORE"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "POP"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "ADD"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "SWAP2"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "POP"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "POP"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "MLOAD"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "DUP1"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "SWAP2"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "SUB"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "SWAP1"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "REVERT"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 760,
											"end": 802,
											"name": "JUMPDEST"
										},
										{
											"begin": 1020,
											"end": 1029,
											"name": "DUP1"
										},
										{
											"begin": 897,
											"end": 898,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 883,
											"end": 899,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 883,
											"end": 899,
											"name": "AND"
										},
										{
											"begin": 883,
											"end": 885,
											"name": "DUP2"
										},
										{
											"begin": 883,
											"end": 899,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 883,
											"end": 899,
											"name": "AND"
										},
										{
											"begin": 883,
											"end": 899,
											"name": "EQ"
										},
										{
											"begin": 883,
											"end": 899,
											"name": "ISZERO"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "JUMPI"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "MLOAD"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "DUP2"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "MSTORE"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "ADD"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "DUP1"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "DUP1"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "ADD"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "DUP3"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "DUP2"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "SUB"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "DUP3"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "MSTORE"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "DUP2"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "MSTORE"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "ADD"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "DUP1"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "PUSH",
											"value": "4E6F742076616C69642061646472657373210000000000000000000000000000"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "DUP2"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "MSTORE"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "POP"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "ADD"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "SWAP2"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "POP"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "POP"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "MLOAD"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "DUP1"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "SWAP2"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "SUB"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "SWAP1"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "REVERT"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 875,
											"end": 922,
											"name": "JUMPDEST"
										},
										{
											"begin": 1050,
											"end": 1059,
											"name": "DUP2"
										},
										{
											"begin": 1042,
											"end": 1047,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1047,
											"name": "DUP1"
										},
										{
											"begin": 1042,
											"end": 1059,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1042,
											"end": 1059,
											"name": "EXP"
										},
										{
											"begin": 1042,
											"end": 1059,
											"name": "DUP2"
										},
										{
											"begin": 1042,
											"end": 1059,
											"name": "SLOAD"
										},
										{
											"begin": 1042,
											"end": 1059,
											"name": "DUP2"
										},
										{
											"begin": 1042,
											"end": 1059,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1042,
											"end": 1059,
											"name": "MUL"
										},
										{
											"begin": 1042,
											"end": 1059,
											"name": "NOT"
										},
										{
											"begin": 1042,
											"end": 1059,
											"name": "AND"
										},
										{
											"begin": 1042,
											"end": 1059,
											"name": "SWAP1"
										},
										{
											"begin": 1042,
											"end": 1059,
											"name": "DUP4"
										},
										{
											"begin": 1042,
											"end": 1059,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1042,
											"end": 1059,
											"name": "AND"
										},
										{
											"begin": 1042,
											"end": 1059,
											"name": "MUL"
										},
										{
											"begin": 1042,
											"end": 1059,
											"name": "OR"
										},
										{
											"begin": 1042,
											"end": 1059,
											"name": "SWAP1"
										},
										{
											"begin": 1042,
											"end": 1059,
											"name": "SSTORE"
										},
										{
											"begin": 1042,
											"end": 1059,
											"name": "POP"
										},
										{
											"begin": 813,
											"end": 814,
											"name": "POP"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "POP"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"changeOwner(address)": "a6f9dae1",
							"decrement(uint256)": "3a9ebefd",
							"owner()": "8da5cb5b",
							"x()": "0c55699c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"decrement\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"x\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"FunctionModifiers.sol\":\"FuncModifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"FunctionModifiers.sol\":{\"keccak256\":\"0x9ce65ea69fc47cbd63e7ce6e71114b87498d790c07eba17232d7aa56c08835ad\",\"urls\":[\"bzz-raw://76011496aa8137377cad98b05d8c96dfa5cae3bbb9e98b49deee8b4929a6c684\",\"dweb:/ipfs/QmPk6JhfYz7ZGjH9DxPMm4MpquuUmFouVdCtLcmUXCQjFW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "FunctionModifiers.sol:FuncModifier",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 57,
								"contract": "FunctionModifiers.sol:FuncModifier",
								"label": "x",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 59,
								"contract": "FunctionModifiers.sol:FuncModifier",
								"label": "locked",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"FunctionModifiers.sol": {
				"ast": {
					"absolutePath": "FunctionModifiers.sol",
					"exportedSymbols": {
						"FuncModifier": [
							101
						]
					},
					"id": 102,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".3"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 101,
							"linearizedBaseContracts": [
								101
							],
							"name": "FuncModifier",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 101,
									"src": "221:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "221:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "275:37:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 6,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "286:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 7,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "294:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "294:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "286:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "286:18:0"
											}
										]
									},
									"documentation": null,
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "265:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "275:0:0"
									},
									"scope": 101,
									"src": "254:58:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "749:73:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 15,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "768:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "768:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 17,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "782:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "768:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f74204f776e657221",
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "789:12:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d883a05b133b1209667092f9ba1112a71661071be226f75988f5d7b9ad84423",
																"typeString": "literal_string \"Not Owner!\""
															},
															"value": "Not Owner!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d883a05b133b1209667092f9ba1112a71661071be226f75988f5d7b9ad84423",
																"typeString": "literal_string \"Not Owner!\""
															}
														],
														"id": 14,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															119,
															120
														],
														"referencedDeclaration": 120,
														"src": "760:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "760:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "760:42:0"
											},
											{
												"id": 22,
												"nodeType": "PlaceholderStatement",
												"src": "813:1:0"
											}
										]
									},
									"documentation": null,
									"id": 24,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "746:2:0"
									},
									"src": "728:94:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "864:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 29,
																"name": "_a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "883:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 31,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "897:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 30,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "889:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "889:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "883:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f742076616c6964206164647265737321",
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "901:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_753118be014cfd12b9d8e567d95d587ace826749bf10154590e4bcb135cca8cf",
																"typeString": "literal_string \"Not valid address!\""
															},
															"value": "Not valid address!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_753118be014cfd12b9d8e567d95d587ace826749bf10154590e4bcb135cca8cf",
																"typeString": "literal_string \"Not valid address!\""
															}
														],
														"id": 28,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															119,
															120
														],
														"referencedDeclaration": 120,
														"src": "875:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "875:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "875:47:0"
											},
											{
												"id": 37,
												"nodeType": "PlaceholderStatement",
												"src": "933:1:0"
											}
										]
									},
									"documentation": null,
									"id": 39,
									"name": "validAddress",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"name": "_a",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "852:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "852:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "851:12:0"
									},
									"src": "830:112:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1031:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 49,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "1042:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 50,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "1050:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1042:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1042:17:0"
											}
										]
									},
									"documentation": null,
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 44,
											"modifierName": {
												"argumentTypes": null,
												"id": 43,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 24,
												"src": "997:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "997:9:0"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 46,
													"name": "_newOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 41,
													"src": "1020:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 47,
											"modifierName": {
												"argumentTypes": null,
												"id": 45,
												"name": "validAddress",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 39,
												"src": "1007:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1007:23:0"
										}
									],
									"name": "changeOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"name": "_newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "971:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "970:19:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1031:0:0"
									},
									"scope": 101,
									"src": "950:117:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 57,
									"name": "x",
									"nodeType": "VariableDeclaration",
									"scope": 101,
									"src": "1077:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 55,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1077:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3130",
										"id": 56,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1093:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 59,
									"name": "locked",
									"nodeType": "VariableDeclaration",
									"scope": 101,
									"src": "1102:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 58,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1102:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "1146:106:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1165:7:0",
															"subExpression": {
																"argumentTypes": null,
																"id": 62,
																"name": "locked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "1166:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4c6f636b6564",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1174:8:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974",
																"typeString": "literal_string \"Locked\""
															},
															"value": "Locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974",
																"typeString": "literal_string \"Locked\""
															}
														],
														"id": 61,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															119,
															120
														],
														"referencedDeclaration": 120,
														"src": "1157:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1157:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1157:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 67,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "1194:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1203:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1194:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "1194:13:0"
											},
											{
												"id": 71,
												"nodeType": "PlaceholderStatement",
												"src": "1218:1:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 72,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "1230:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1239:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1230:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "1230:14:0"
											}
										]
									},
									"documentation": null,
									"id": 77,
									"name": "noReentrancy",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1143:2:0"
									},
									"src": "1122:130:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "1307:91:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 84,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "1318:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 85,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "1323:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1318:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "1318:6:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 88,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "1341:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1345:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1341:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 98,
												"nodeType": "IfStatement",
												"src": "1337:54:0",
												"trueBody": {
													"id": 97,
													"nodeType": "Block",
													"src": "1348:43:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 92,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 79,
																			"src": "1373:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 93,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1377:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1373:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 91,
																	"name": "decrement",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 100,
																	"src": "1363:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1363:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 96,
															"nodeType": "ExpressionStatement",
															"src": "1363:16:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 82,
											"modifierName": {
												"argumentTypes": null,
												"id": 81,
												"name": "noReentrancy",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 77,
												"src": "1294:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1294:12:0"
										}
									],
									"name": "decrement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"name": "i",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1279:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1279:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1278:8:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1307:0:0"
									},
									"scope": 101,
									"src": "1260:138:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 102,
							"src": "27:1378:0"
						}
					],
					"src": "0:1405:0"
				},
				"id": 0
			}
		}
	}
}